local utils = require "main.utils"

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })
	--msg.post("@system:", "toggle_physics_debug")

	self.speed = vmath.vector3(0)
	self.dash = 50
	--go.set("/Player/glow#glow", "tint", vmath.vector4(0))
	--go.animate("/Player/glow#glow", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(0.5), go.EASING_INOUTSINE, 1.5)

	timer.delay(2, false, function()
		particlefx.play("#trail")
	end)
end

function on_input(self, action_id, action)

	self.pos = go.get_position()

	if action_id == hash("left") then
		sprite.set_hflip("#sprite", true)
		self.speed.x = -1
	elseif action_id == hash("right") then
		self.speed.x = 1
		sprite.set_hflip("#sprite", false)
	elseif action_id == hash("up") then
		self.speed.y = 1
	elseif action_id == hash("down") then
		self.speed.y = -1
	end

	if action_id == hash("space") then
		if action.released then
			go.set_position(self.pos + (self.speed * self.dash))
		end
	else
		if (self.speed.x ~= 0) and (self.speed.y ~= 0) then
			go.set_position(self.pos + self.speed * 0.5)
		else
			go.set_position(self.pos + self.speed)
		end
	end

	if action.released then
		self.speed = vmath.vector3(0)
	end

	if self.pos.x > 1270 then go.set_position(vmath.vector3(1270,self.pos.y,0)) end
	if self.pos.x < 10	 then go.set_position(vmath.vector3(10,  self.pos.y,0)) end
	if self.pos.y > 700  then go.set_position(vmath.vector3(self.pos.x, 700,0)) end
	if self.pos.y < 20   then go.set_position(vmath.vector3(self.pos.x, 20,  0)) end

end
